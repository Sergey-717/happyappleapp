import styles from "../styles/Home.module.less";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { Footer } from "./Footer";
import { useEffect, useState } from "react";
import AppleIcon from "@mui/icons-material/Apple";
import { Text } from "@nextui-org/react";

// let bc1 = [];
// const how = (arr) => {
// for (let obj in arr) {
//   bc1.push(arr[obj].productCategoryId)
// }
// bc1 = bc1.reduce((x, index) => (x[index] = (x[index] || 0) + 1, x), {})
// return bc1
// };
// console.log(how(bc))
const HeadTittle = (props: any) => {
  return (
    <div className={props.className}>
      <div className={styles.app__header__logo}>
        <Link href="/">
          <Image
            alt="logo"
            width={150 * props.size}
            height={150 * props.size}
            src="/6.png"
          />
        </Link>
      </div>
      <div className={styles.app__header__happy}>
        <Link href="/">
          <h1 className={styles.happyTittle}>HAPPY APPLΞ</h1>
          <h3 className={styles.happyTittle}>
            Продажа и обмен техники
            <AppleIcon color="secondary" fontSize="large" />
          </h3>
        </Link>
      </div>
      {props.children && <div>{props?.children}</div>}
    </div>
  );
};

export const MainComponent = (props: any) => {
  const [small, setSmall] = useState(false);

  useEffect(() => {
    if (typeof window !== "undefined") {
      window.addEventListener("scroll", () =>
        setSmall(window.pageYOffset > 70)
      );
    }
  }, []);

  return (
    <>
      <Head>
        <title>Happy apple</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
      </Head>
      <div className="app">
        <div
          className={`${styles.app__header} ${
            small ? styles.app__header__small : ""
          }`}
        >
          <HeadTittle
            className={`${styles.app__header_main} ${
              small ? styles.app__header_main__small : ""
            }`}
            size={1}
          />
          <HeadTittle
            className={`${styles.app__header_blur} ${
              small ? styles.app__header_blur__small : ""
            }`}
            size={0.6}
          >
            {small && (
              <div className={styles.app__header__links}>
                {props.category
                  ?.filter((x: any) => x.counter)
                  .map((x: any) => (
                    <Link
                      key={x.id}
                      href={`/${x.id}`}
                      className={styles.app__header__links__every}
                    >
                      <h2>{x.name}</h2>
                    </Link>
                  ))}
              </div>
            )}
          </HeadTittle>
        </div>
      </div>
      <div className={styles.app__main}>{props.children}</div>
      <Footer />
    </>
  );
};
